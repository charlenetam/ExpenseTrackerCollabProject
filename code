import datetime

def validate_date(date_str):
    #Check if the date string is in the correct format (YYYY-MM-DD).
    try:
        datetime.datetime.strptime(date_str, '%Y-%m-%d')
        return True
    except ValueError:
        return False

def add_expense(expenses):
    #Add a new expense with validated category, amount, and date.
    while True:
        category = input("Enter category: ").strip()
        if not category:
            print("Category cannot be empty.")
            continue
        
        amount_input = input("Enter amount: ").strip()
        try:
            amount = float(amount_input)
            if amount <= 0:
                print("Amount must be a positive number.")
                continue
        except ValueError:
            print("Invalid amount. Please enter a number.")
            continue
        
        date_input = input("Enter date (YYYY-MM-DD): ").strip()
        if not validate_date(date_input):
            print("Invalid date format. Please use YYYY-MM-DD.")
            continue
        
        expenses.append({
            'category': category,
            'amount': amount,
            'date': date_input
        })
        print("Expense added successfully.")
        break

def view_expenses(expenses):
    #Display all expenses in a formatted list.
    if not expenses:
        print("No expenses to display.")
        return
    
    print("\nAll Expenses:")
    print("-" * 30)
    for idx, expense in enumerate(expenses, start=1):
        print(f"{idx}. Category: {expense['category']}")
        print(f"   Amount: ${expense['amount']:.2f}")
        print(f"   Date: {expense['date']}")
        print("-" * 30)

def filter_by_category(expenses, category):
    #Display expenses filtered by a specific category.
    filtered = [exp for exp in expenses if exp['category'].lower() == category.lower()]
    if not filtered:
        print(f"No expenses found in category '{category}'.")
        return
    
    print(f"\nExpenses in category '{category}':")
    print("-" * 30)
    for idx, exp in enumerate(filtered, start=1):
        print(f"{idx}. Category: {exp['category']}")
        print(f"   Amount: ${exp['amount']:.2f}")
        print(f"   Date: {exp['date']}")
        print("-" * 30)
